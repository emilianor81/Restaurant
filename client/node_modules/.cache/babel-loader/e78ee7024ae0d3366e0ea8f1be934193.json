{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\restaurante con emi\\\\Restaurant\\\\client\\\\src\\\\componentes\\\\Administracion\\\\Administracion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './create.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addRestaurant, getRestaurants } from '../../redux/Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Create(props) {\n  _s();\n\n  // const [errors, setErrors] = useState({});\n  const [form, setForm] = useState({\n    title: '',\n    summary: '',\n    spoonacularScore: 0,\n    healthScore: 0,\n    instructions: '',\n    diets: []\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addRestaurant(form);\n    props.getRestaurants();\n    alert('Recipe Created Successfully');\n  }\n\n  const handleInputChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewR\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"RecipeForm\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"LabelTitle\",\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"LabelTitle\",\n          children: \"Descripci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"100\",\n          name: \"spoonacularScore\",\n          onChange: e => setForm({ ...form,\n            spoonacularScore: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"100\",\n          name: \"healthScore\",\n          onChange: e => setForm({ ...form,\n            healthScore: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"LabelTitle\",\n          children: \"Ciudad:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"summary\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"LabelTitle\",\n          children: \"Foto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"instructions\",\n          onChange: e => setForm({ ...form,\n            instructions: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DietsAndSubmitButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"CreateSubmitButton\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"CreateSubmitButton\",\n          type: \"submit\",\n          children: \"Submit2222\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"CreateSubmitButton\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"Link\",\n        to: \"/home\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"KuSPPRowp3LawxsufosWPh+5Eic=\");\n\n_c = Create;\n\nfunction mapStateToProps(state) {\n  return {\n    diets: state.allDiets // user: state.user\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRestaurant: info => dispatch(addRestaurant(info)),\n    getRestaurants: () => dispatch(getRestaurants())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/santi/Desktop/restaurante con emi/Restaurant/client/src/componentes/Administracion/Administracion.js"],"names":["React","useState","Link","connect","addRestaurant","getRestaurants","Create","props","form","setForm","title","summary","spoonacularScore","healthScore","instructions","diets","handleSubmit","e","preventDefault","alert","handleInputChange","target","name","value","mapStateToProps","state","allDiets","mapDispatchToProps","dispatch","info"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './create.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addRestaurant, getRestaurants } from '../../redux/Actions';\r\n\r\nfunction Create(props) {\r\n  // const [errors, setErrors] = useState({});\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    summary: '',\r\n    spoonacularScore: 0,\r\n    healthScore: 0,\r\n    instructions: '',\r\n    diets: []\r\n  })\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addRestaurant(form);\r\n    props.getRestaurants();\r\n    alert('Recipe Created Successfully');\r\n  }\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n   return (\r\n    <div className='NewR'>\r\n      \r\n      <form className='RecipeForm' onSubmit={(e) => handleSubmit(e)}>\r\n        <div className='CreateForm'>\r\n          <label className='LabelTitle'>Nombre:</label>\r\n          <input type='text' name='title' onChange={handleInputChange} />\r\n          <label className='LabelTitle'>Descripción:</label>\r\n          <input type='number' min='0' max='100' name='spoonacularScore' onChange={(e) => setForm({ ...form, spoonacularScore: e.target.value })} />\r\n          {/* <label className='LabelTitle'>Dirección:</label> */}\r\n          <input type='number' min='0' max='100' name='healthScore'\r\n            onChange={(e) => setForm({ ...form, healthScore: e.target.value })} />\r\n          <label className='LabelTitle'>Ciudad:</label>\r\n          <textarea name='summary' onChange={handleInputChange} />\r\n\r\n          <label className='LabelTitle'>Foto:</label>\r\n          <textarea name='instructions' onChange={(e) => setForm({ ...form, instructions: e.target.value })} />\r\n        </div>\r\n        <div className='DietsAndSubmitButton'>\r\n          {/* <label className='LabelTitle'> Diets: </label>\r\n          {props.diets.map(d => <label className='DietsLabel' key={d.id}><input type='checkbox' name={d.name} value={d.name}\r\n            onChange={(e) => setForm({ ...form, diets: [...form.diets, e.target.value] })}\r\n          />{d.name}</label>)} */}\r\n          <button className='CreateSubmitButton' type='submit'>Submit</button>\r\n          <button className='CreateSubmitButton' type='submit'>Submit2222</button>\r\n\r\n                  </div>\r\n      </form> \r\n      <button className='CreateSubmitButton' ><Link className='Link' to='/home'>Back to Home</Link></button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    diets: state.allDiets,\r\n    // user: state.user\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addRestaurant: info => dispatch(addRestaurant(info)),\r\n    getRestaurants: () => dispatch(getRestaurants())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create)"]},"metadata":{},"sourceType":"module"}